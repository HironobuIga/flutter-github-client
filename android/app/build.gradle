def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new Exception("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

def debugKeystoreProperties = new Properties()
def debugKeystorePropertiesFile = rootProject.file('debugKeystore/debugKeystore.properties')
if (debugKeystorePropertiesFile.exists()) {
    debugKeystoreProperties.load(new FileInputStream(debugKeystorePropertiesFile))
}

def releaseKeystoreProperties = new Properties()
def releaseKeystorePropertiesFile = rootProject.file('releaseKeystore/releaseKeystore.properties')
if (releaseKeystorePropertiesFile.exists()) {
    releaseKeystoreProperties.load(new FileInputStream(releaseKeystorePropertiesFile))
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    compileSdkVersion 30

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    signingConfigs {
        debug {
            keyAlias debugKeystoreProperties.getProperty('keyAlias')
            keyPassword debugKeystoreProperties.getProperty('keyPassword')
            storeFile file('../debugKeystore/debug.jks')
            storePassword debugKeystoreProperties.getProperty('storePassword')
        }
        release {
            keyAlias releaseKeystoreProperties.getProperty('keyAlias')
            keyPassword releaseKeystoreProperties.getProperty('keyPassword')
            storeFile file('../releaseKeystore/release.jks')
            storePassword releaseKeystoreProperties.getProperty('storePassword')
        }
    }

    defaultConfig {
        applicationId "iganin.flutter_github_client"
        minSdkVersion 23
        targetSdkVersion 30
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
            debuggable true
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        release {
            signingConfig signingConfigs.release
            debuggable false
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions "default"
    productFlavors {
        development {
            dimension "default"
            applicationSuffix ".development"
        }
        staging {
            dimension "default"
            applicationSuffix ".staging"
        }
        production {
            dimension "default"
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}
